{
  "name": "webtorrent",
  "description": "Streaming torrent client",
  "version": "0.98.5",
  "author": {
    "name": "WebTorrent, LLC",
    "email": "feross@webtorrent.io",
    "url": "https://webtorrent.io"
  },
  "browser": {
    "./lib/server.js": false,
    "./lib/tcp-pool.js": false,
    "bittorrent-dht/client": false,
    "fs-chunk-store": "memory-chunk-store",
    "load-ip-set": false,
    "net": false,
    "os": false,
    "ut_pex": false
  },
  "browserify": {
    "transform": [
      "package-json-versionify"
    ]
  },
  "bugs": {
    "url": "https://github.com/feross/webtorrent/issues"
  },
  "dependencies": {
    "addr-to-ip-port": "^1.4.2",
    "bitfield": "^1.1.2",
    "bittorrent-dht": "^7.2.2",
    "bittorrent-protocol": "^2.1.5",
    "chunk-store-stream": "^2.0.2",
    "create-torrent": "^3.24.5",
    "debug": "^2.2.0",
    "end-of-stream": "^1.1.0",
    "fs-chunk-store": "^1.6.2",
    "immediate-chunk-store": "^1.0.8",
    "inherits": "^2.0.1",
    "load-ip-set": "^1.2.7",
    "memory-chunk-store": "^1.2.0",
    "mime": "^1.3.4",
    "multistream": "^2.0.5",
    "package-json-versionify": "^1.0.2",
    "parse-torrent": "^5.8.0",
    "pump": "^1.0.1",
    "random-iterate": "^1.0.1",
    "randombytes": "^2.0.3",
    "range-parser": "^1.2.0",
    "readable-stream": "^2.1.4",
    "render-media": "^2.8.0",
    "run-parallel": "^1.1.6",
    "run-parallel-limit": "^1.0.3",
    "safe-buffer": "^5.0.1",
    "simple-concat": "^1.0.0",
    "simple-get": "^2.2.1",
    "simple-peer": "^6.0.4",
    "simple-sha1": "^2.0.8",
    "speedometer": "^1.0.0",
    "stream-to-blob": "^1.0.0",
    "stream-to-blob-url": "^2.1.0",
    "stream-with-known-length-to-buffer": "^1.0.0",
    "torrent-discovery": "^8.1.0",
    "torrent-piece": "^1.1.0",
    "uniq": "^1.0.1",
    "unordered-array-remove": "^1.0.2",
    "ut_metadata": "git+https://github.com/guerrerocarlos/ut_metadata.git",
    "ut_pex": "^1.1.1",
    "xtend": "^4.0.1",
    "zero-fill": "^2.2.3"
  },
  "devDependencies": {
    "bittorrent-tracker": "^8.0.7",
    "brfs": "^1.4.3",
    "browserify": "^14.0.0",
    "cross-spawn": "^4.0.0",
    "electron-prebuilt": "^0.37.8",
    "finalhandler": "^0.5.0",
    "network-address": "^1.1.0",
    "run-series": "^1.1.4",
    "serve-static": "^1.11.1",
    "standard": "*",
    "tape": "^4.6.0",
    "uglify-js": "^2.7.0",
    "webtorrent-fixtures": "^1.5.0",
    "zuul": "^3.10.1"
  },
  "engines": {
    "node": ">=4"
  },
  "homepage": "https://webtorrent.io",
  "keywords": [
    "bittorrent",
    "bittorrent client",
    "download",
    "mad science",
    "p2p",
    "peer-to-peer",
    "peers",
    "streaming",
    "swarm",
    "torrent",
    "web torrent",
    "webrtc",
    "webrtc data",
    "webtorrent"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/webtorrent.git"
  },
  "scripts": {
    "build": "browserify -s WebTorrent -e ./ | uglifyjs -c warnings=false -m > webtorrent.min.js",
    "build-debug": "browserify -s WebTorrent -e ./ > webtorrent.debug.js",
    "size": "npm run build && cat webtorrent.min.js | gzip | wc -c",
    "test": "standard && node ./bin/test.js",
    "test-browser": "zuul -- test/*.js test/browser/*.js",
    "test-browser-headless": "zuul --electron -- test/*.js test/browser/*.js",
    "test-browser-local": "zuul --local -- test/*.js test/browser/*.js",
    "test-node": "tape test/*.js test/node/*.js",
    "update-authors": "./bin/update-authors.sh"
  },
  "readme": "<h1 align=\"center\">\r\n  <br>\r\n  <a href=\"https://webtorrent.io\"><img src=\"https://webtorrent.io/img/WebTorrent.png\" alt=\"WebTorrent\" width=\"200\"></a>\r\n  <br>\r\n  WebTorrent\r\n  <br>\r\n  <br>\r\n</h1>\r\n\r\n<h4 align=\"center\">The streaming torrent client. For node.js and the web.</h4>\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://gitter.im/feross/webtorrent\"><img src=\"https://img.shields.io/badge/gitter-join%20chat%20%E2%86%92-brightgreen.svg\" alt=\"Gitter\"></a>\r\n  <a href=\"https://travis-ci.org/feross/webtorrent\"><img src=\"https://img.shields.io/travis/feross/webtorrent/master.svg\" alt=\"Travis Build\"></a>\r\n  <a href=\"https://ci.appveyor.com/project/feross/webtorrent\"><img src=\"https://ci.appveyor.com/api/projects/status/cgu85xlgl72uoswq/branch/master?svg=true\" alt=\"AppVeyor Build\"></a>\r\n  <a href=\"https://www.npmjs.com/package/webtorrent\"><img src=\"https://img.shields.io/npm/dm/webtorrent.svg\" alt=\"NPM Downloads\"></a>\r\n  <a href=\"https://www.npmjs.com/package/webtorrent\"><img src=\"https://img.shields.io/npm/v/webtorrent.svg\" alt=\"NPM Version\"></a>\r\n</p>\r\n<br>\r\n\r\n**WebTorrent** is a streaming torrent client for **node.js** and the **browser**. YEP,\r\nTHAT'S RIGHT. THE BROWSER. It's written completely in JavaScript – the language of the web\r\n– so the same code works in both runtimes.\r\n\r\nIn node.js, this module is a simple torrent client, using TCP and UDP to talk to\r\nother torrent clients.\r\n\r\nIn the browser, WebTorrent uses **WebRTC** (data channels) for peer-to-peer transport.\r\nIt can be used **without** browser plugins, extensions, or installations. It's Just\r\nJavaScript&trade;. Note: WebTorrent does **not** support UDP/TCP peers in browser.\r\n\r\nSimply include the\r\n[`webtorrent.min.js`](https://cdn.jsdelivr.net/webtorrent/latest/webtorrent.min.js) script\r\non your page to start fetching files over WebRTC using the BitTorrent protocol, or\r\n`require('webtorrent')` with [browserify](http://browserify.org/). See [demo apps\r\n](#webtorrent-in-production) and [code examples](#usage) below.\r\n\r\nTo make BitTorrent work over WebRTC (which is the only P2P transport that works on the\r\nweb) we made some protocol changes. Therefore, a browser-based WebTorrent client or **\"web\r\npeer\"** can only connect to other clients that support WebTorrent/WebRTC.\r\n\r\nTo seed files to web peers, use a client that supports WebTorrent, e.g.\r\n[WebTorrent Desktop][webtorrent-desktop], a desktop client with a\r\nfamiliar UI that can connect to web peers,\r\n[webtorrent-hybrid](https://github.com/feross/webtorrent-hybrid), a command line program,\r\nor [Instant.io](https://instant.io/), a website. Established torrent clients like\r\n**Vuze** have [already added WebTorrent support](https://wiki.vuze.com/w/WebTorrent) so\r\nthey can connect to both normal *and* web peers. We hope other clients will follow.\r\n\r\n![Network](https://webtorrent.io/img/network.png)\r\n\r\n### Features\r\n\r\n- **Torrent client for node.js & the browser** (same npm package!)\r\n- **Insanely fast**\r\n- Download **multiple torrents** simultaneously, efficiently\r\n- **Pure Javascript** (no native dependencies)\r\n- Exposes files as **streams**\r\n  - Fetches pieces from the network on-demand so seeking is supported (even before torrent is finished)\r\n  - Seamlessly switches between sequential and rarest-first piece selection strategy\r\n- Supports advanced torrent client features\r\n  - **magnet uri** support via **[ut_metadata](https://github.com/feross/ut_metadata)**\r\n  - **peer discovery** via **[dht](https://github.com/feross/bittorrent-dht)**,\r\n    **[tracker](https://github.com/feross/bittorrent-tracker)**, and\r\n    **[ut_pex](https://github.com/fisch0920/ut_pex)**\r\n  - **[protocol extension api](https://github.com/feross/bittorrent-protocol#extension-api)**\r\n    for adding new extensions\r\n- **Comprehensive test suite** (runs completely offline, so it's reliable and fast)\r\n\r\n#### Browser/WebRTC environment features\r\n\r\n- **WebRTC data channels** for lightweight peer-to-peer communication with **no plugins**\r\n- **No silos.** WebTorrent is a P2P network for the **entire web.** WebTorrent clients\r\n  running on one domain can connect to clients on any other domain.\r\n- Stream video torrents into a `<video>` tag (`webm (vp8, vp9)` or `mp4 (h.264)`)\r\n- Supports Chrome, Firefox, and Opera.\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://saucelabs.com/u/webtorrent\">\r\n    <img src=\"https://saucelabs.com/browser-matrix/webtorrent.svg\" alt=\"Sauce Labs\">\r\n  </a>\r\n</p>\r\n\r\n### Install\r\n\r\nTo install WebTorrent for use in node or the browser with `require('webtorrent')`, run:\r\n\r\n```bash\r\nnpm install webtorrent\r\n```\r\n\r\nTo install a `webtorrent`\r\n[command line program](https://github.com/feross/webtorrent-cli), run:\r\n\r\n```bash\r\nnpm install webtorrent-cli -g\r\n```\r\n\r\nTo install a WebTorrent desktop appliation for Mac, Windows, or Linux, see\r\n[WebTorrent Desktop][webtorrent-desktop].\r\n\r\n### Ways to help\r\n\r\n- **Join us in [Gitter][webtorrent-gitter-url]** or on freenode at `#webtorrent` to help\r\n  with development or to hang out with some mad science hackers :)\r\n- **[Create a new issue](https://github.com/feross/webtorrent/issues/new)** to report bugs\r\n- **[Fix an issue](https://github.com/feross/webtorrent/issues?state=open)**. WebTorrent\r\n  is an [OPEN Open Source Project](CONTRIBUTING.md)!\r\n\r\n### Who is using WebTorrent today?\r\n\r\n**[Lots of folks!](docs/faq.md#who-is-using-webtorrent-today)**\r\n\r\n### WebTorrent API Documentation\r\n\r\n**[Read the full API Documentation](docs/api.md).**\r\n\r\n### Usage\r\n\r\nWebTorrent is the first BitTorrent client that works in the browser, using open web\r\nstandards (no plugins, just HTML5 and WebRTC)! It's easy to get started!\r\n\r\n#### In the browser\r\n\r\n##### Downloading a file is simple:\r\n\r\n```js\r\nvar WebTorrent = require('webtorrent')\r\n\r\nvar client = new WebTorrent()\r\nvar magnetURI = '...'\r\n\r\nclient.add(magnetURI, function (torrent) {\r\n  // Got torrent metadata!\r\n  console.log('Client is downloading:', torrent.infoHash)\r\n\r\n  torrent.files.forEach(function (file) {\r\n    // Display the file by appending it to the DOM. Supports video, audio, images, and\r\n    // more. Specify a container element (CSS selector or reference to DOM node).\r\n    file.appendTo('body')\r\n  })\r\n})\r\n```\r\n\r\n##### Seeding a file is simple, too:\r\n\r\n```js\r\nvar dragDrop = require('drag-drop')\r\nvar WebTorrent = require('webtorrent')\r\n\r\nvar client = new WebTorrent()\r\n\r\n// When user drops files on the browser, create a new torrent and start seeding it!\r\ndragDrop('body', function (files) {\r\n  client.seed(files, function (torrent) {\r\n    console.log('Client is seeding:', torrent.infoHash)\r\n  })\r\n})\r\n```\r\n\r\nThere are more examples in [docs/get-started.md](docs/get-started.md).\r\n\r\n##### Browserify\r\n\r\nWebTorrent works great with [browserify](http://browserify.org/), an npm package that let's\r\nyou use [node](http://nodejs.org/)-style require() to organize your browser code and load modules installed by [npm](https://www.npmjs.com/) (as seen in the previous examples).\r\n\r\n##### Webpack\r\n\r\nWebTorrent also works with [webpack](http://webpack.github.io/), a module bundler similar\r\nto browserify. However, webpack requires the following extra configuration:\r\n\r\n```js\r\n{\r\n  target: 'web',\r\n  node: {\r\n    fs: 'empty'\r\n  },\r\n  module: {\r\n    loaders: [\r\n      // make sure to install the 'json-loader' package: npm install json-loader\r\n      {\r\n        test: /\\.json$/,\r\n        loader: 'json'\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nOtherwise you could also directly use the pre-built version via `require('webtorrent/webtorrent.min')`.\r\n\r\n##### Script tag\r\n\r\nWebTorrent is also available as a standalone script\r\n([`webtorrent.min.js`](webtorrent.min.js)) which exposes `WebTorrent` on the `window`\r\nobject, so it can be used with just a script tag:\r\n\r\n```html\r\n<script src=\"webtorrent.min.js\"></script>\r\n```\r\n\r\nThe WebTorrent script is also hosted on fast, reliable CDN infrastructure (Cloudflare and\r\nMaxCDN) for easy inclusion on your site:\r\n\r\n```html\r\n<script src=\"https://cdn.jsdelivr.net/webtorrent/latest/webtorrent.min.js\"></script>\r\n```\r\n\r\n#### In Node.js\r\n\r\nWebTorrent also works in node.js, using the *same npm package!* It's mad science!\r\n\r\n**NOTE**: To connect to \"web peers\" (browsers) in addition to normal BitTorrent peers, use\r\n[webtorrent-hybrid](https://github.com/feross/webtorrent-hybrid) which includes WebRTC\r\nsupport for node.\r\n\r\n#### As a command line app\r\n\r\nWebTorrent is also available as a\r\n[command line app](https://github.com/feross/webtorrent-cli). Here's how to use it:\r\n\r\n```bash\r\n$ npm install webtorrent-cli -g\r\n$ webtorrent --help\r\n```\r\n\r\nTo download a torrent:\r\n\r\n```bash\r\n$ webtorrent magnet_uri\r\n```\r\n\r\nTo stream a torrent to a device like **AirPlay** or **Chromecast**, just pass a flag:\r\n\r\n```bash\r\n$ webtorrent magnet_uri --airplay\r\n```\r\n\r\nThere are many supported streaming options:\r\n\r\n```bash\r\n--airplay               Apple TV\r\n--chromecast            Chromecast\r\n--mplayer               MPlayer\r\n--mpv                   MPV\r\n--omx [jack]            omx [default: hdmi]\r\n--vlc                   VLC\r\n--xbmc                  XBMC\r\n--stdout                standard out [implies --quiet]\r\n```\r\n\r\nIn addition to magnet uris, webtorrent supports [many ways](docs/api.md#clientaddtorrentid-opts-function-ontorrent-torrent-) to specify a torrent.\r\n\r\n### Modules\r\n\r\nMost of the active development is happening inside of small npm packages which are used by WebTorrent.\r\n\r\n#### The Node Way&trade;\r\n\r\n> \"When applications are done well, they are just the really application-specific, brackish residue that can't be so easily abstracted away. All the nice, reusable components sublimate away onto github and npm where everybody can collaborate to advance the commons.\" — substack from [\"how I write modules\"](http://substack.net/how_I_write_modules)\r\n\r\n![node.js is shiny](https://feross.net/x/node2.gif)\r\n\r\n#### Modules\r\n\r\nThese are the main modules that make up WebTorrent:\r\n\r\n| module | tests | version | description |\r\n|---|---|---|---|\r\n| **[webtorrent][webtorrent]** | [![][webtorrent-ti]][webtorrent-tu] | [![][webtorrent-ni]][webtorrent-nu] | **torrent client (this module)**\r\n| [bittorrent-dht][bittorrent-dht] | [![][bittorrent-dht-ti]][bittorrent-dht-tu] | [![][bittorrent-dht-ni]][bittorrent-dht-nu] | distributed hash table client\r\n| [bittorrent-peerid][bittorrent-peerid] | [![][bittorrent-peerid-ti]][bittorrent-peerid-tu] | [![][bittorrent-peerid-ni]][bittorrent-peerid-nu] | identify client name/version\r\n| [bittorrent-protocol][bittorrent-protocol] | [![][bittorrent-protocol-ti]][bittorrent-protocol-tu] | [![][bittorrent-protocol-ni]][bittorrent-protocol-nu] | bittorrent protocol stream\r\n| [bittorrent-tracker][bittorrent-tracker] | [![][bittorrent-tracker-ti]][bittorrent-tracker-tu] | [![][bittorrent-tracker-ni]][bittorrent-tracker-nu] | bittorrent tracker server/client\r\n| [create-torrent][create-torrent] | [![][create-torrent-ti]][create-torrent-tu] | [![][create-torrent-ni]][create-torrent-nu] | create .torrent files\r\n| [magnet-uri][magnet-uri] | [![][magnet-uri-ti]][magnet-uri-tu] | [![][magnet-uri-ni]][magnet-uri-nu] | parse magnet uris\r\n| [parse-torrent][parse-torrent] | [![][parse-torrent-ti]][parse-torrent-tu] | [![][parse-torrent-ni]][parse-torrent-nu] | parse torrent identifiers\r\n| [render-media][render-media] | [![][render-media-ti]][render-media-tu] | [![][render-media-ni]][render-media-nu] | intelligently render media files\r\n| [torrent-discovery][torrent-discovery] | [![][torrent-discovery-ti]][torrent-discovery-tu] | [![][torrent-discovery-ni]][torrent-discovery-nu] | find peers via dht and tracker\r\n| [ut_metadata][ut_metadata] | [![][ut_metadata-ti]][ut_metadata-tu] | [![][ut_metadata-ni]][ut_metadata-nu] | metadata for magnet uris (protocol extension)\r\n| [ut_pex][ut_pex] | [![][ut_pex-ti]][ut_pex-tu] | [![][ut_pex-ni]][ut_pex-nu] | peer discovery (protocol extension)\r\n\r\n[webtorrent]: https://github.com/feross/webtorrent\r\n[webtorrent-gitter-url]: https://gitter.im/feross/webtorrent\r\n[webtorrent-ti]: https://img.shields.io/travis/feross/webtorrent/master.svg\r\n[webtorrent-tu]: https://travis-ci.org/feross/webtorrent\r\n[webtorrent-ni]: https://img.shields.io/npm/v/webtorrent.svg\r\n[webtorrent-nu]: https://www.npmjs.com/package/webtorrent\r\n[webtorrent-desktop]: https://webtorrent.io/desktop\r\n\r\n[bittorrent-dht]: https://github.com/feross/bittorrent-dht\r\n[bittorrent-dht-ti]: https://img.shields.io/travis/feross/bittorrent-dht/master.svg\r\n[bittorrent-dht-tu]: https://travis-ci.org/feross/bittorrent-dht\r\n[bittorrent-dht-ni]: https://img.shields.io/npm/v/bittorrent-dht.svg\r\n[bittorrent-dht-nu]: https://www.npmjs.com/package/bittorrent-dht\r\n\r\n[bittorrent-peerid]: https://github.com/fisch0920/bittorrent-peerid\r\n[bittorrent-peerid-ti]: https://img.shields.io/travis/fisch0920/bittorrent-peerid.svg\r\n[bittorrent-peerid-tu]: https://travis-ci.org/fisch0920/bittorrent-peerid\r\n[bittorrent-peerid-ni]: https://img.shields.io/npm/v/bittorrent-peerid.svg\r\n[bittorrent-peerid-nu]: https://www.npmjs.com/package/bittorrent-peerid\r\n\r\n[bittorrent-protocol]: https://github.com/feross/bittorrent-protocol\r\n[bittorrent-protocol-ti]: https://img.shields.io/travis/feross/bittorrent-protocol/master.svg\r\n[bittorrent-protocol-tu]: https://travis-ci.org/feross/bittorrent-protocol\r\n[bittorrent-protocol-ni]: https://img.shields.io/npm/v/bittorrent-protocol.svg\r\n[bittorrent-protocol-nu]: https://www.npmjs.com/package/bittorrent-protocol\r\n\r\n[bittorrent-tracker]: https://github.com/feross/bittorrent-tracker\r\n[bittorrent-tracker-ti]: https://img.shields.io/travis/feross/bittorrent-tracker/master.svg\r\n[bittorrent-tracker-tu]: https://travis-ci.org/feross/bittorrent-tracker\r\n[bittorrent-tracker-ni]: https://img.shields.io/npm/v/bittorrent-tracker.svg\r\n[bittorrent-tracker-nu]: https://www.npmjs.com/package/bittorrent-tracker\r\n\r\n[create-torrent]: https://github.com/feross/create-torrent\r\n[create-torrent-ti]: https://img.shields.io/travis/feross/create-torrent/master.svg\r\n[create-torrent-tu]: https://travis-ci.org/feross/create-torrent\r\n[create-torrent-ni]: https://img.shields.io/npm/v/create-torrent.svg\r\n[create-torrent-nu]: https://www.npmjs.com/package/create-torrent\r\n\r\n[magnet-uri]: https://github.com/feross/magnet-uri\r\n[magnet-uri-ti]: https://img.shields.io/travis/feross/magnet-uri/master.svg\r\n[magnet-uri-tu]: https://travis-ci.org/feross/magnet-uri\r\n[magnet-uri-ni]: https://img.shields.io/npm/v/magnet-uri.svg\r\n[magnet-uri-nu]: https://www.npmjs.com/package/magnet-uri\r\n\r\n[parse-torrent]: https://github.com/feross/parse-torrent\r\n[parse-torrent-ti]: https://img.shields.io/travis/feross/parse-torrent/master.svg\r\n[parse-torrent-tu]: https://travis-ci.org/feross/parse-torrent\r\n[parse-torrent-ni]: https://img.shields.io/npm/v/parse-torrent.svg\r\n[parse-torrent-nu]: https://www.npmjs.com/package/parse-torrent\r\n\r\n[render-media]: https://github.com/feross/render-media\r\n[render-media-ti]: https://img.shields.io/travis/feross/render-media/master.svg\r\n[render-media-tu]: https://travis-ci.org/feross/render-media\r\n[render-media-ni]: https://img.shields.io/npm/v/render-media.svg\r\n[render-media-nu]: https://www.npmjs.com/package/render-media\r\n\r\n[torrent-discovery]: https://github.com/feross/torrent-discovery\r\n[torrent-discovery-ti]: https://img.shields.io/travis/feross/torrent-discovery/master.svg\r\n[torrent-discovery-tu]: https://travis-ci.org/feross/torrent-discovery\r\n[torrent-discovery-ni]: https://img.shields.io/npm/v/torrent-discovery.svg\r\n[torrent-discovery-nu]: https://www.npmjs.com/package/torrent-discovery\r\n\r\n[ut_metadata]: https://github.com/feross/ut_metadata\r\n[ut_metadata-ti]: https://img.shields.io/travis/feross/ut_metadata/master.svg\r\n[ut_metadata-tu]: https://travis-ci.org/feross/ut_metadata\r\n[ut_metadata-ni]: https://img.shields.io/npm/v/ut_metadata.svg\r\n[ut_metadata-nu]: https://www.npmjs.com/package/ut_metadata\r\n\r\n[ut_pex]: https://github.com/fisch0920/ut_pex\r\n[ut_pex-ti]: https://img.shields.io/travis/fisch0920/ut_pex.svg\r\n[ut_pex-tu]: https://travis-ci.org/fisch0920/ut_pex\r\n[ut_pex-ni]: https://img.shields.io/npm/v/ut_pex.svg\r\n[ut_pex-nu]: https://www.npmjs.com/package/ut_pex\r\n\r\n#### Enable debug logs\r\n\r\nIn **node**, enable debug logs by setting the `DEBUG` environment variable to the name of the\r\nmodule you want to debug (e.g. `bittorrent-protocol`, or `*` to print **all logs**).\r\n\r\n```bash\r\nDEBUG=* webtorrent\r\n```\r\n\r\nIn the **browser**, enable debug logs by running this in the developer console:\r\n\r\n```js\r\nlocalStorage.debug = '*'\r\n```\r\n\r\nDisable by running this:\r\n\r\n```js\r\nlocalStorage.removeItem('debug')\r\n```\r\n\r\n### Talks about WebTorrent\r\n\r\n- May 2015 (Data Terra Nemo) - [WebTorrent: Mother of all demos](https://www.youtube.com/watch?v=RRtNEcAaUO8)\r\n- Nov 2014 (JSConf Asia) - [How WebTorrent Works](https://www.youtube.com/watch?v=kxHRATfvnlw)\r\n- Sep 2014 (NodeConf EU) – [WebTorrent Mad Science](https://www.youtube.com/watch?v=BVBXkzVjvPc) (first working WebTorrent demo)\r\n- May 2014 (JS.LA) – [How I Built a BitTorrent Client in the Browser](https://vimeo.com/97324247) (progress update; node client working)\r\n- Oct 2013 (RealtimeConf) – [WebRTC Black Magic](https://vimeo.com/77265280) (first mention of idea for WebTorrent)\r\n\r\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\r\n\r\n### License\r\n\r\nMIT. Copyright (c) [WebTorrent, LLC](https://webtorrent.io).\r\n",
  "readmeFilename": "README.md",
  "_id": "webtorrent@0.98.5",
  "_shasum": "2005cbc6affea5b6b1f7a3b111944267da1f0259",
  "_resolved": "git+https://github.com/guerrerocarlos/webtorrent.git#869f22be09eb719e9e0099088e9351d740d6a322",
  "_from": "webtorrent@git+https://github.com/guerrerocarlos/webtorrent.git#cachep2p"
}
